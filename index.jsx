import React, { useEffect, useMemo, useState } from "react"; import { motion } from "framer-motion"; import { Card, CardContent } from "@/components/ui/card"; import { Button } from "@/components/ui/button"; import { Input } from "@/components/ui/input"; import { Textarea } from "@/components/ui/textarea"; import { Checkbox } from "@/components/ui/checkbox"; import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"; import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"; import { Badge } from "@/components/ui/badge"; import { Loader2, Gift, Link2, Plus, Check, EyeOff, Eye, Sparkles, Trash2, Users } from "lucide-react";

// ===================== // ‚öôÔ∏è FIREBASE (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) // ===================== // –ß—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ–∂–¥—É –≤—Å–µ–º–∏ —á–ª–µ–Ω–∞–º–∏ —Å–µ–º—å–∏ –∏ —Å–∫—Ä—ã–≤–∞—Ç—å –ª–∏—á–Ω–æ—Å—Ç—å "–¥–∞—Ä–∏—Ç–µ–ª—è" –æ—Ç –∞–≤—Ç–æ—Ä–∞, // –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∏–∂–µ –æ–±—ä–µ–∫—Ç firebaseConfig –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ Firebase –∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –±–ª–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏. // –ï—Å–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º ‚Äî –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ –≤ localStorage (–±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏).

// import { initializeApp } from "firebase/app"; // import { getFirestore, doc, setDoc, getDoc, onSnapshot, updateDoc, arrayUnion, arrayRemove } from "firebase/firestore"; // import { getAuth, signInAnonymously, onAuthStateChanged } from "firebase/auth";

const firebaseConfig = { // apiKey: "", // authDomain: "", // projectId: "", };

// let app = null, db = null, auth = null; // if (firebaseConfig.apiKey) { //   app = initializeApp(firebaseConfig); //   db = getFirestore(app); //   auth = getAuth(app); // }

// ===================== // üîê –†–æ–ª–∏ –∏ –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö // ===================== // listId: —Å—Ç—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∞–º–∏–ª–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞) // item: { id, title, url, price, note, image, addedByUid, createdAt } // claims: –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ /lists/{listId}/claims/{itemId} -> { claimerUid, claimerName, createdAt } // –ê–≤—Ç–æ—Ä (owner) –≤–∏–¥–∏—Ç —Ñ–∞–∫—Ç –±—Ä–æ–Ω–∏ (–µ—Å—Ç—å/–Ω–µ—Ç), –Ω–æ –Ω–µ –≤–∏–¥–∏—Ç claimerName. // –î–∞—Ä–∏—Ç–µ–ª–∏ (santa) –≤–∏–¥—è—Ç, –∑–∞–Ω—è—Ç–æ –ª–∏ –∏ –∫–µ–º (–ø–æ –∂–µ–ª–∞–Ω–∏—é –º–æ–∂–Ω–æ —Å–∫—Ä—ã—Ç—å –∏–º—è ‚Äî —á–µ–∫–±–æ–∫—Å –≤ UI).

// ===================== // üß† –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã // ===================== const uid = () => Math.random().toString(36).slice(2, 10);

const saveLocal = (key, val) => localStorage.setItem(key, JSON.stringify(val)); const loadLocal = (key, fallback) => { try { return JSON.parse(localStorage.getItem(key)) ?? fallback; } catch { return fallback; } };

const prettyPrice = (p) => { if (!p) return ""; const num = Number(String(p).replace(/[^0-9.,]/g, "").replace(",", ".")); if (Number.isFinite(num)) return new Intl.NumberFormat(undefined, { style: "currency", currency: "USD" }).format(num); return p; };

async function fetchLinkPreview(url) { // –ë–µ–∑ –±—ç–∫–µ–Ω–¥–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤ —Ä–µ–∂—É—Ç CORS. –ë–µ—Ä—ë–º –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π Microlink API –∫–∞–∫ –≤–µ–∂–ª–∏–≤—ã–π —Ñ–æ–ª–±—ç–∫. // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∏–∂–µ. try { const res = await fetch(https://api.microlink.io/?url=${encodeURIComponent(url)}&audio=false&video=false); const data = await res.json(); const r = data?.data || {}; return { title: r.title || "", description: r.description || "", image: r.image?.url || r.logo?.url || "", publisher: r.publisher || new URL(url).hostname.replace("www.", ""), }; } catch { return { title: "", description: "", image: "", publisher: "" }; } }

// ===================== // üé® –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI // ===================== function Header({ role, setRole, listId, setListId, displayName, setDisplayName }) { return ( <div className="w-full flex flex-col md:flex-row items-center justify-between gap-4 p-4"> <div className="flex items-center gap-3"> <Gift className="w-7 h-7" /> <div> <h1 className="text-2xl font-semibold">–°–µ–º–µ–π–Ω—ã–π –≤–∏—à‚Äë–ª–∏—Å—Ç</h1> <p className="text-sm text-muted-foreground">–ö—Ä–∞—Å–∏–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ —Å —Ç–∞–π–Ω—ã–º–∏ –±—Ä–æ–Ω—è–º–∏ üéÅ</p> </div> </div>

<div className="flex flex-wrap items-center gap-3">
    <Input value={listId} onChange={(e)=>setListId(e.target.value.trim())} placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ù–æ–≤—ã–π –≥–æ–¥ 2025)" className="w-64" />
    <Input value={displayName} onChange={(e)=>setDisplayName(e.target.value)} placeholder="–í–∞—à–µ –∏–º—è" className="w-40" />
    <Select value={role} onValueChange={(v)=>setRole(v)}>
      <SelectTrigger className="w-40">
        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å" />
      </SelectTrigger>
      <SelectContent>
        <SelectItem value="owner">–ê–≤—Ç–æ—Ä —Å–ø–∏—Å–∫–∞</SelectItem>
        <SelectItem value="santa">–î–∞—Ä–∏—Ç–µ–ª—å</SelectItem>
      </SelectContent>
    </Select>
  </div>
</div>

); }

function AddItemForm({ onAdd }) { const [title, setTitle] = useState(""); const [url, setUrl] = useState(""); const [price, setPrice] = useState(""); const [note, setNote] = useState(""); const [loading, setLoading] = useState(false); const [preview, setPreview] = useState(null);

useEffect(() => { let active = true; (async () => { if (!url || !/^https?:///i.test(url)) { setPreview(null); return; } setLoading(true); const p = await fetchLinkPreview(url); if (active) { setPreview(p); setLoading(false); } })(); return () => { active = false; }; }, [url]);

const submit = () => { if (!title.trim()) return; onAdd({ title: title.trim(), url: url.trim(), price: price.trim(), note: note.trim(), preview }); setTitle(""); setUrl(""); setPrice(""); setNote(""); setPreview(null); };

return ( <Card className="border-0 shadow-sm"> <CardContent className="p-4 grid md:grid-cols-3 gap-4"> <div className="md:col-span-2 grid grid-cols-1 md:grid-cols-2 gap-3"> <Input value={title} onChange={(e)=>setTitle(e.target.value)} placeholder="–ß—Ç–æ —Ö–æ—á—É" /> <Input value={price} onChange={(e)=>setPrice(e.target.value)} placeholder="–¶–µ–Ω–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" /> <div className="col-span-1 md:col-span-2 flex gap-2 items-center"> <Link2 className="w-4 h-4" /> <Input value={url} onChange={(e)=>setUrl(e.target.value)} placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä (–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å)" /> </div> <div className="col-span-1 md:col-span-2"> <Textarea value={note} onChange={(e)=>setNote(e.target.value)} placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π/—Ä–∞–∑–º–µ—Ä/—Ü–≤–µ—Ç" rows={3} /> </div> </div> <div className="flex flex-col gap-3"> <Button onClick={submit} className="w-full"><Plus className="w-4 h-4 mr-2" />–î–æ–±–∞–≤–∏—Ç—å</Button> {loading && <div className="text-sm text-muted-foreground flex items-center gap-2"><Loader2 className="w-4 h-4 animate-spin"/> –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–≤—å—é‚Ä¶</div>} {preview && ( <div className="rounded-xl border p-2 flex gap-3 items-start"> {preview.image ? ( <img src={preview.image} alt="preview" className="w-16 h-16 rounded-lg object-cover"/> ) : ( <div className="w-16 h-16 rounded-lg bg-muted flex items-center justify-center"> <Link2 className="w-5 h-5"/> </div> )} <div className="text-xs"> <div className="font-medium line-clamp-2">{preview.title || "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Å—ã–ª–∫–∏"}</div> <div className="text-muted-foreground line-clamp-2">{preview.description}</div> <div className="mt-1"><Badge variant="secondary">{preview.publisher}</Badge></div> </div> </div> )} </div> </CardContent> </Card> ); }

function ItemCard({ item, role, currentUid, onClaim, onUnclaim, claimsCountVisible, onDelete }) { const claimed = item.claims && item.claims.length > 0; const youClaimed = (item.claims || []).some(c => c.claimerUid === currentUid); const firstClaim = (item.claims || [])[0];

return ( <motion.div layout initial={{opacity:0, y:10}} animate={{opacity:1, y:0}}> <Card className="overflow-hidden border-0 shadow group"> <div className="grid grid-cols-[96px_1fr] gap-3 p-3"> {item.preview?.image ? ( <img src={item.preview.image} alt="img" className="w-24 h-24 rounded-xl object-cover"/> ) : ( <div className={w-24 h-24 rounded-xl flex items-center justify-center ${claimed?"bg-green-50":"bg-muted"}}> <Gift className="w-6 h-6"/> </div> )} <div className="flex flex-col"> <div className="flex items-start justify-between gap-2"> <div> <div className="text-base font-semibold leading-tight">{item.title}</div> {item.price && <div className="text-sm text-muted-foreground">{prettyPrice(item.price)}</div>} {item.note && <div className="text-sm text-muted-foreground mt-1 line-clamp-2">{item.note}</div>} </div> {onDelete && ( <Button size="icon" variant="ghost" onClick={()=>onDelete(item.id)} className="opacity-0 group-hover:opacity-100 transition-opacity"><Trash2 className="w-4 h-4"/></Button> )} </div> <div className="mt-2 flex items-center gap-2 flex-wrap"> {item.url && <a href={item.url} target="_blank" rel="noreferrer" className="text-sm underline inline-flex items-center gap-1"><Link2 className="w-4 h-4"/> –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É</a>} {role === "owner" ? ( <Badge variant={claimed?"default":"secondary"}>{claimed? "–ö—Ç–æ-—Ç–æ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª" : "–ü–æ–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ"}</Badge> ) : ( claimed ? ( youClaimed ? ( <div className="flex items-center gap-2"> <Badge variant="default" className="inline-flex items-center gap-1"><Check className="w-3 h-3"/> –í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏</Badge> <Button size="sm" variant="outline" onClick={()=>onUnclaim(item.id)}>–°–Ω—è—Ç—å –±—Ä–æ–Ω—å</Button> </div> ) : ( <Badge variant="secondary">–£–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ</Badge> ) ) : ( <Button size="sm" onClick={()=>onClaim(item.id)}>–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</Button> ) )} {role === "santa" && claimsCountVisible && claimed && firstClaim?.claimerName && ( <span className="text-xs text-muted-foreground">(–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª(–∞): {firstClaim.claimerName})</span> )} </div> </div> </div> </Card> </motion.div> ); }

export default function App() { const [listId, setListId] = useState(loadLocal("wish:listId", "–ù–æ–≤—ã–π –≥–æ–¥ 2025")); const [role, setRole] = useState(loadLocal("wish:role", "owner")); const [displayName, setDisplayName] = useState(loadLocal("wish:name", "")); const [items, setItems] = useState(loadLocal("wish:items", [])); const [claimsCountVisible, setClaimsCountVisible] = useState(false); // –¥–∞—Ä–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–æ–∫–∞–∑–∞—Ç—å –∏–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ const [currentUid, setCurrentUid] = useState(loadLocal("wish:uid", uid()));

// persist locals useEffect(()=>saveLocal("wish:listId", listId), [listId]); useEffect(()=>saveLocal("wish:role", role), [role]); useEffect(()=>saveLocal("wish:name", displayName), [displayName]); useEffect(()=>saveLocal("wish:items", items), [items]); useEffect(()=>saveLocal("wish:uid", currentUid), [currentUid]);

// NOTE: –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º (–±–µ–∑ Firebase): –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —É –≤–∞—Å –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. // –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –æ–Ω–ª–∞–π–Ω‚Äë—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏ —Ç–∞–π–Ω—ã–µ –±—Ä–æ–Ω–∏ –º–µ–∂–¥—É –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏: // 1) –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç Firebase, –≤–∫–ª—é—á–∏—Ç–µ Anonymous Auth –∏ Firestore. // 2) –í—Å—Ç–∞–≤—å—Ç–µ firebaseConfig –∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∏–º–ø–æ—Ä—Ç/–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞–≤–µ—Ä—Ö—É. // 3) –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ addItem/claim/unclaim –Ω–∞ Firestore-–≤–∞—Ä–∏–∞–Ω—Ç—ã (—Å–º. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∏–∂–µ).

const addItem = async ({ title, url, price, note, preview }) => { const item = { id: uid(), title, url, price, note, preview, createdAt: Date.now(), addedByUid: currentUid, claims: [] }; setItems((prev)=>[item, ...prev]); // üîÅ Firestore –ø—Ä–∏–º–µ—Ä: // await setDoc(doc(db, "lists", listId), { updatedAt: Date.now() }, { merge: true }); // await setDoc(doc(db, lists/${listId}/items, item.id), item); };

const deleteItem = async (id) => { setItems(prev => prev.filter(i => i.id !== id)); // Firestore: await deleteDoc(doc(db, lists/${listId}/items, id)); };

const claim = async (itemId) => { setItems(prev => prev.map(i => i.id===itemId ? { ...i, claims: [{ claimerUid: currentUid, claimerName: displayName || "–ë–µ–∑ –∏–º–µ–Ω–∏", createdAt: Date.now() }] } : i)); // Firestore: await setDoc(doc(db, lists/${listId}/claims, itemId), { claimerUid: auth.currentUser.uid, claimerName: displayName, createdAt: Date.now() }); }; const unclaim = async (itemId) => { setItems(prev => prev.map(i => i.id===itemId ? { ...i, claims: [] } : i)); // Firestore: await deleteDoc(doc(db, lists/${listId}/claims, itemId)); };

const sortedItems = useMemo(() => { const claimed = items.filter(i => (i.claims?.length || 0) > 0); const free = items.filter(i => (i.claims?.length || 0) === 0); return [...free, ...claimed]; }, [items]);

return ( <div className="min-h-screen bg-gradient-to-b from-white to-slate-50"> <div className="max-w-5xl mx-auto p-4"> <Header role={role} setRole={setRole} listId={listId} setListId={setListId} displayName={displayName} setDisplayName={setDisplayName} />

<Tabs defaultValue="list" className="mt-2">
      <TabsList>
        <TabsTrigger value="list">–°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π</TabsTrigger>
        <TabsTrigger value="howto">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</TabsTrigger>
      </TabsList>

      <TabsContent value="list" className="space-y-4 mt-4">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2 text-sm text-muted-foreground"><Users className="w-4 h-4"/> –°–ø–∏—Å–æ–∫: <span className="font-medium">{listId}</span></div>
          {role === "santa" && (
            <label className="flex items-center gap-2 text-sm text-muted-foreground">
              <Checkbox checked={claimsCountVisible} onCheckedChange={(v)=>setClaimsCountVisible(Boolean(v))} /> –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–º—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ
            </label>
          )}
        </div>

        {role === "owner" && (
          <AddItemForm onAdd={addItem} />
        )}

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {sortedItems.map(item => (
            <ItemCard key={item.id} item={item} role={role} currentUid={currentUid} onClaim={claim} onUnclaim={unclaim} claimsCountVisible={claimsCountVisible} onDelete={role==="owner"?deleteItem:undefined} />
          ))}
        </div>

        {sortedItems.length === 0 && (
          <div className="text-center text-muted-foreground py-12">
            <Sparkles className="w-6 h-6 mx-auto mb-2"/>
            –ü–æ–∫–∞ –ø—É—Å—Ç–æ. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ!
          </div>
        )}
      </TabsContent>

      <TabsContent value="howto" className="mt-4">
        <Card className="border-0 shadow-sm">
          <CardContent className="p-6 space-y-4 text-sm leading-relaxed">
            <div className="font-medium">–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è</div>
            <ol className="list-decimal ml-4 space-y-2">
              <li>–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –æ–±—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–ù–æ–≤—ã–π –≥–æ–¥ 2025¬ª), —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ –Ω–∞–≤–µ—Ä—Ö—É.</li>
              <li>–ê–≤—Ç–æ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç —Ä–æ–ª—å ¬´–ê–≤—Ç–æ—Ä —Å–ø–∏—Å–∫–∞¬ª, –¥–æ–±–∞–≤–ª—è–µ—Ç –∂–µ–ª–∞–Ω–∏—è –∏ –¥–µ–ª–∏—Ç—Å—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π (URL –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –¥–ª—è –≤—Å–µ—Ö).</li>
              <li>–î–∞—Ä–∏—Ç–µ–ª–∏ –≤—ã–±–∏—Ä–∞—é—Ç —Ä–æ–ª—å ¬´–î–∞—Ä–∏—Ç–µ–ª—å¬ª, –æ—Ç–∫—Ä—ã–≤–∞—é—Ç —Å–ø–∏—Å–æ–∫ –∏ –Ω–∞–∂–∏–º–∞—é—Ç ¬´–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å¬ª –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–¥–∞—Ä–∫–µ.</li>
              <li>–ê–≤—Ç–æ—Ä –≤–∏–¥–∏—Ç, —á—Ç–æ –ø–æ–¥–∞—Ä–æ–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ –≤–∏–¥–∏—Ç –∫–µ–º.</li>
            </ol>
            <div className="font-medium pt-2">–û–Ω–ª–∞–π–Ω‚Äë—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</div>
            <p>–°–µ–π—á–∞—Å –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. –ß—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ–∂–¥—É –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Firebase (—Å–º. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–≤–µ—Ä—Ö—É —Ñ–∞–π–ª–∞). –¢–∞–º –∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å –∏ —É–∫–∞–∑–∞–Ω–∏—è. –ë–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å/–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å JSON (–±—ã—Å—Ç—Ä–æ –¥–æ–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏).</p>
          </CardContent>
        </Card>
      </TabsContent>
    </Tabs>
  </div>
</div>

); }

